1. What are classes?ÊBe sure to define the following terms in your explanation and describe the relationships between them:* class* state* behavior* instance variable* instance methodA ruby class is an instance of the class Class. It is an object oriented way of modeling computer code in which objects of a similar nature can be created and information regarding the state can be stored in instance variables, and their behavior can be stored in instance methods. An instance variable is an attribute of one particular instantiated object of the class, and an instance method is a method that objects of that type can run using dot notation.  2. What are attributes?Attributes are the properties of an object, generally its instance variables. By default, they are only accessible from methods defines within the class unless there are getter/setter methods, or the shorthand of attr_reader, attr_writer, or attr_accessor. 3. Give an example of a real world object, and describe how you might assign its attributes if you were to design a class to represent that object.A classroom of students could have instance variables of a string for the teacher, an array of names for the students, and an array of Date objects for classtimes. There could be methods to add and remove students to the class, and to change the date of the lessons. 4. What is the purpose of the initialize method? When does it run?The purpose of the initialize method is to enable the setup of default behavior of instances of an object, and it is run when the .new method is run on the class to create an object of that class type. 5. What are modules?A module is a way to organize a set of behaviors in a group, without the need for storing state as would be done in the case of a class. The module can be used in other code by using the require or require_relative commands along with the name.  6. What are the different ways you can use a module?A module can be used by using require or require_relative at the beginning of code or include in a class. 